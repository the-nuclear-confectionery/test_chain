/*    reso.c   */
/* 
********************************************************************************
This is the public version of the resonance decay calculation using the output 
generated by the hydrodynamical code azhydro0p2.  The majority of the code was 
developed by Josef Sollfrank and Peter Kolb.  Additional work and comments 
were added by Evan Frodermann, September 2005.
Please refer to the papers 
J. Sollfrank, P. Koch, and U. Heinz, Phys. Lett B 252 (1990) and 
J. Sollfrank, P. Koch, and U. Heinz, Z. Phys. C 52 (1991) 
for a description of the formalism utilized in this program.
********************************************************************************
*/


#include	<string.h>
#include	<stdio.h>
#include	<math.h>
#include <iostream>
#include <fstream>
#include <string>
#include <sstream>

#include	"reso.h"
#include	"functions.h"
#include	"decay.h"


using namespace std;

//*****************************************************
//This is the main program that calls all the needed subroutines.

int	partid[MAXINTV]; /* array for converting Montecarlo numbers in internal numbering of the 
resonances */
double  PHI[NPHI];    /* Array for phi-storage */

struct par particle[NUMPARTICLE];
struct de decay[NUMDECAY];

int main (int argc, char *argv[]) {
	string	specfile,outfile,resname;
	double bfac,sfac;
	 if (argv[1]&&argv[2]&&argv[3])
	{
	specfile= argv[1];
	
	outfile= argv[2];
	
	resname=argv[3];
	
	}
	else
	{
	cout << "ERROR: no input spectra file deined!" << endl;
	exit(1);
	}

	

	FILE	*datin;
       
	char	infile[FILEDIM];
       	char	resofile[FILEDIM];

	int max, maxdecay, bound,phinum,ptnum;
	double ptmax;
	int dum;

	printf("START of reso decays !\n");
	//Read in the data from "reso.inp, including the results folder and the spectra data  
	string resname2="input/"+resname;    
	cout << resname2 << endl;
	datin = fopen(resname2.c_str(),"r");
	
	
	dum=fscanf(datin,"%s",resofile);
	dum=fscanf(datin,"%i%*s",&bound);
	dum=fscanf(datin,"%*s%i%i%lf",&phinum,&ptnum,&ptmax);
	//cout << resofile << endl;
	
        fclose(datin);
	//Read in the spectra and decays using "resoweak.dat" as a database of particles
        readspec(specfile,resofile, &max, &maxdecay,phinum,ptnum,ptmax);
	//The main module that calculates the resonance decay feeddown
        cal_reso_decays(max, maxdecay, bound); 
	//Writes the spectra to specified data files.
        writespec(max,outfile);

	//printf("END of reso decays ! \n");

	return 0;	/* ok */
	}





